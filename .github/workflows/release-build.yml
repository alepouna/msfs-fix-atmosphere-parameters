# This workflow will run on commit to master to build and release the exe on GitHub releases automatically

name: Build and Release

on:
  push:
    branches:
        - main

jobs:

    build:

        runs-on: ubuntu-latest
    
        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
        steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
        - run: npm install
        - run: npm run build --if-present
    
        # Delete index.js from build folder
        - name: Delete index.js
          run: rm -rf ./build/index.js
    
        # Upload artifact
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: build
            path: ./build

    release:

        runs-on: ubuntu-latest

        needs: build

        permissions: write-all

        steps:
        - name: Download artifact
          uses: actions/download-artifact@v2
          with:
            name: build
            path: ./build

        # Checkout the repo to get the version.txt file
        - uses: actions/checkout@v2
    
        # Read .github/version.txt
        - name: Read version.txt
          id: read-version
          run: echo "version=$(cat .github/version.txt)" >> $GITHUB_OUTPUT

        # Create the release
        - name: Create Release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.ref_name }}
          run: |
            gh release create "$tag" \
                --repo="$GITHUB_REPOSITORY" \
                --title="v${{ steps.read-version.outputs.version }}" \
                --generate-notes

        - name: Get the ID of the created Release
          id: get-release-id
          run: echo "id=$(gh release view ${{ github.ref_name }} --repo="$GITHUB_REPOSITORY" --json id)" >> $GITHUB_OUTPUT

        # Edit release notes to include text
        - name: Edit Release Notes
          env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                tag: ${{ github.ref_name }}
          run: |
                gh release edit "$tag" \
                    --repo="$GITHUB_REPOSITORY" \
                    --title="v${{ steps.read-version.outputs.version }}" \
                    --notes="This is a release for v${{ steps.read-version.outputs.version }} of the fix-msfs-atmosphere tool. This tool is used to fix the atmosphere in Microsoft Flight Simulator 2020. This release is for the Windows version of the tool."

        - name: Upload Release Asset
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.ref_name }}
          run: |
            gh release upload "$tag" ./build/fix-msfs-atmosphere.exe --repo="$GITHUB_REPOSITORY" --clobber

    # If release fails, delete the release
    delete-release:
        runs-on: ubuntu-latest
        needs: release
        permissions: write-all
        if: failure()
        steps:
        - name: Delete Release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.ref_name }}
          run: |
            gh release delete "$tag" --repo="$GITHUB_REPOSITORY" --yes